<task>
	<context>
		- For each Worksheet for each Workbook;
		- Consider NaN or nan as empty values;
	</context>
	<dependencies>
		- Use pandas for dataframing;
		- Use openpyxl for the spreadsheet engine;
	</dependencies>
	<procedures>
		1. Locate the header row using iterrows;
		2. If a header is found:
				a. Save the row index as an variable;
				b. Save a tuple for the header cells representing the column entities 
						(stop when you reach two sequencial empty cells, and them "trim" the tuple);
			<suggestions>
				- You can recognize the header by typical fields for Form Data like name, age, gender, role, title, 
						timestamps (not all of them, just gather enough to make sense) OR it has two cells in the same row 
							filled with values
			</suggestions> 
			Else if a header is not found, throw an error and return the default value (or just void/None);
		3. Locate the starting column of the table by the index of the first header, and then:
			a. Save the column index as an variable;
			b. Create a dictionary for the values of column+row combinations;
		4. After finishing reading the table, search for more tables in the Worsheet following similar criteria. 
				If more than one is found, convert all previous mentioned variables into enumerated dictionaries for 
					saving the data related for each table
		5. If working with multiple dataframes derivated from multiple subtables, 
				remember to play close attention to correction factors for indexes of cells and rows
		6. Ask the user if he wants to save the results as a .json;
	</procedures>
</task>